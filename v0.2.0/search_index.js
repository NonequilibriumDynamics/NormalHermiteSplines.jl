var documenterSearchIndex = {"docs":
[{"location":"Public-API/#Public-API","page":"Public API","title":"Public API","text":"","category":"section"},{"location":"Public-API/#Functions","page":"Public API","title":"Functions","text":"","category":"section"},{"location":"Public-API/","page":"Public API","title":"Public API","text":"interpolate\r\nprepare\r\nconstruct\r\nevaluate\r\nevaluate_grad\r\nestimate_interpolation_quality\r\nget_cond\r\nget_epsilon\r\nestimate_epsilon","category":"page"},{"location":"Public-API/#NormalHermiteSplines.interpolate","page":"Public API","title":"NormalHermiteSplines.interpolate","text":"interpolate(nodes::Matrix{T}, values::Vector{T}, kernel::RK = RK_H0()) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nCreate the normal spline by values of function defined at nodes.\n\nArguments\n\nnodes: The function value nodes.          This should be an n×n_1 matrix, where n is dimension of the sampled space          and n_1 is the number of function value nodes.          It means that each column in the matrix defines one node.\nvalues: function values at nodes nodes.\nkernel: reproducing kernel of Bessel potential space the normal spline is constructed in.           It must be a struct object of the following type:             RK_H0 if the spline is constructing as a continuous function,             RK_H1 if the spline is constructing as a differentiable function,             RK_H2 if the spline is constructing as a twice differentiable function.\n\nReturn: the completely initialized NormalSpline object that can be passed to evaluate function         to interpolate the data to required points.\n\n\n\n\n\ninterpolate(nodes::Matrix{T}, values::Vector{T}, d_nodes::Matrix{T}, es::Matrix{T}, d_values::Vector{T}, kernel::RK = RK_H1()) where {T <: AbstractFloat, RK <: ReproducingKernel_1}\n\nCreate the normal spline by values of function defined at nodes and d_values of function directional derivatives defined at d_nodes.\n\nArguments\n\nnodes: The function value nodes.          This should be an n×n_1 matrix, where n is dimension of the sampled space          and n_1 is the number of function value nodes.          It means that each column in the matrix defines one node.\nvalues: function values at nodes nodes.\nd_nodes: The function directional derivative nodes.           This should be an n×n_2 matrix, where n is dimension of the sampled space and           n_2 is the number of function directional derivative nodes.\nes: Directions of the function directional derivatives.      This should be an n×n_2 matrix, where n is dimension of the sampled space and      n_2 is the number of function directional derivative nodes.      It means that each column in the matrix defines one direction of the function directional derivative.\nd_values: function directional derivative values at d_nodes nodes.\nkernel: reproducing kernel of Bessel potential space the normal spline is constructed in.           It must be a struct object of the following type:             RK_H1 if the spline is constructing as a differentiable function,             RK_H2 if the spline is constructing as a twice differentiable function.\n\nReturn: the completely initialized NormalSpline object that can be passed to evaluate function         to interpolate the data to required points.\n\n\n\n\n\ninterpolate(nodes::Vector{T}, values::Vector{T}, kernel::RK = RK_H0()) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nCreate 1D normal spline by values of function defined at nodes.\n\nArguments\n\nnodes: The function value nodes.          This should be an n×n_1 matrix, where n is dimension of the sampled space          and n_1 is the number of function value nodes.          It means that each column in the matrix defines one node.\nvalues: function values at n_1 interpolation nodes.\nkernel: reproducing kernel of Bessel potential space the normal spline is constructed in.           It must be a struct object of the following type:             RK_H0 if the spline is constructing as a continuous function,             RK_H1 if the spline is constructing as a differentiable function,             RK_H2 if the spline is constructing as a twice differentiable function.\n\nReturn: the completely initialized NormalSpline object that can be passed to evaluate function         to interpolate the data to required points.\n\n\n\n\n\ninterpolate(nodes::Vector{T}, values::Vector{T}, d_nodes::Vector{T}, d_values::Vector{T}, kernel::RK = RK_H1()) where {T <: AbstractFloat, RK <: ReproducingKernel_1}\n\nCreate the 1D normal spline by values of function defined at nodes and d_values of function derivatives defined at d_nodes.\n\nArguments\n\nnodes: The function value nodes.\nvalues: function values at nodes nodes.\nd_nodes: The function derivative nodes.\nd_values: function derivative values at d_nodes nodes.\nkernel: reproducing kernel of Bessel potential space the normal spline is constructed in.           It must be a struct object of the following type:             RK_H1 if the spline is constructing as a differentiable function,             RK_H2 if the spline is constructing as a twice differentiable function.\n\nReturn: the completely initialized NormalSpline object that can be passed to evaluate function         to interpolate the data to required points.\n\n\n\n\n\n","category":"function"},{"location":"Public-API/#NormalHermiteSplines.prepare","page":"Public API","title":"NormalHermiteSplines.prepare","text":"prepare(nodes::Matrix{T}, kernel::RK = RK_H0()) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nPrepare the normal spline by constructing and factorizing Gram matrix of the interpolation problem. Initialize the NormalSpline object.\n\nArguments\n\nnodes: The function value nodes.          This should be an n×n_1 matrix, where n is dimension of the sampled space and          n_1 is the number of function value nodes. It means that each column in the matrix defines one node.\nkernel: reproducing kernel of Bessel potential space the normal spline is constructed in.           It must be a struct object of the following type:             RK_H0 if the spline is constructing as a continuous function,             RK_H1 if the spline is constructing as a differentiable function,             RK_H2 if the spline is constructing as a twice differentiable function.\n\nReturn: the partly initialized NormalSpline object that must be passed to construct function         in order to complete the spline initialization.\n\n\n\n\n\nprepare(nodes::Matrix{T}, d_nodes::Matrix{T}, es::Matrix{T}, kernel::RK = RK_H1()) where {T <: AbstractFloat, RK <: ReproducingKernel_1}\n\nPrepare the normal spline by constructing and factorizing Gram matrix of the interpolation problem. Initialize the NormalSpline object.\n\nArguments\n\nnodes: The function value nodes.          This should be an n×n_1 matrix, where n is dimension of the sampled space and          n_1 is the number of function value nodes.           It means that each column in the matrix defines one node.\nd_nodes: The function directional derivatives nodes.            This should be an n×n_2 matrix, where n is dimension of the sampled space and            n_2 is the number of function directional derivative nodes.\nes: Directions of the function directional derivatives.       This should be an n×n_2 matrix, where n is dimension of the sampled space and       n_2 is the number of function directional derivative nodes.       It means that each column in the matrix defines one direction of the function directional derivative.\nkernel: reproducing kernel of Bessel potential space the normal spline is constructed in.           It must be a struct object of the following type:             RK_H1 if the spline is constructing as a differentiable function,             RK_H2 if the spline is constructing as a twice differentiable function.\n\nReturn: the partly initialized NormalSpline object that must be passed to construct function         in order to complete the spline initialization.\n\n\n\n\n\nprepare(nodes::Vector{T}, kernel::RK = RK_H0()) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nPrepare 1D normal spline by constructing and factorizing Gram matrix of the interpolation problem. Initialize the NormalSpline object.\n\nArguments\n\nnodes: The function value nodes.\nkernel: reproducing kernel of Bessel potential space the normal spline is constructed in.           It must be a struct object of the following type:             RK_H0 if the spline is constructing as a continuous function,             RK_H1 if the spline is constructing as a differentiable function,             RK_H2 if the spline is constructing as a twice differentiable function.\n\nReturn: the partly initialized NormalSpline object that must be passed to construct function         in order to complete the spline initialization.\n\n\n\n\n\nprepare(nodes::Vector{T}, d_nodes::Vector{T}, kernel::RK = RK_H1()) where {T <: AbstractFloat, RK <: ReproducingKernel_1}\n\nPrepare the 1D normal spline by constructing and factorizing Gram matrix of the interpolation problem. Initialize the NormalSpline object.\n\nArguments\n\nnodes: The function value nodes.\nd_nodes: The function derivatives nodes.\nkernel: reproducing kernel of Bessel potential space the normal spline is constructed in.           It must be a struct object of the following type:             RK_H1 if the spline is constructing as a differentiable function,             RK_H2 if the spline is constructing as a twice differentiable function.\n\nReturn: the partly initialized NormalSpline object that must be passed to construct function         in order to complete the spline initialization.\n\n\n\n\n\n","category":"function"},{"location":"Public-API/#NormalHermiteSplines.construct","page":"Public API","title":"NormalHermiteSplines.construct","text":"construct(spline::NormalSpline{T, RK}, values::Vector{T}) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nConstruct an interpolating spline by calculating coefficients of the spline and completely initializing the NormalSpline object.\n\nArguments\n\nspline: the partly initialized NormalSpline object returned by prepare function.\nvalues: function values at nodes nodes.\n\nReturn: the completely initialized NormalSpline object that can be passed to evaluate function         to interpolate the data to required points.\n\n\n\n\n\nconstruct(spline::NormalSpline{T, RK}, values::Vector{T}, d_values::Vector{T}) where {T <: AbstractFloat, RK <: ReproducingKernel_1}\n\nConstruct an interpolating spline by calculating coefficients of the spline and completely initializing the NormalSpline object.\n\nArguments\n\nspline: the partly initialized NormalSpline object returned by prepare function.\nvalues: function values at nodes nodes.\nd_values: function directional derivative values at d_nodes nodes.\n\nReturn: the completely initialized NormalSpline object that can be passed to evaluate function         to interpolate the data to required points.\n\n\n\n\n\n","category":"function"},{"location":"Public-API/#NormalHermiteSplines.evaluate","page":"Public API","title":"NormalHermiteSplines.evaluate","text":"evaluate(spline::NormalSpline{T, RK}, points::Matrix{T}) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nEvaluate normal spline at the locations defined in points.\n\nArguments\n\nspline: theNormalSplineobject returned byinterpolateorconstruct` function.\npoints: locations at which spline values are evaluating.           This should be an n×m matrix, where n is dimension of the sampled space           and m is the number of locations where spline values are evaluating.           It means that each column in the matrix defines one location.\n\nReturn: Vector{T} of spline values at the locations defined in points.\n\n\n\n\n\nevaluate(spline::NormalSpline{T, RK}, points::Vector{T}) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nEvaluate 1D normal spline at the points locations.\n\nArguments\n\nspline: the NormalSpline object returned by interpolate or construct function.\npoints: locations at which spline values are evaluating.                      This should be a vector of size m where m is the number of evaluating points.\n\nReturn: spline value at the point location.\n\n\n\n\n\n","category":"function"},{"location":"Public-API/#NormalHermiteSplines.estimate_interpolation_quality","page":"Public API","title":"NormalHermiteSplines.estimate_interpolation_quality","text":"estimate_interpolation_quality(spline::NormalSpline{T, RK}) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nEstimate the interpolation quality\n\nArguments\n\nspline: the NormalSpline object returned by construct or interpolate function.\n\nReturn: RMSE of interpolation at function value nodes.\n\n\n\n\n\n","category":"function"},{"location":"Public-API/#NormalHermiteSplines.get_cond","page":"Public API","title":"NormalHermiteSplines.get_cond","text":"get_cond(spline::NormalSpline{T, RK}) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nGet an estimation of the Gram matrix condition number. (C. Brás, W. Hager, J. Júdice, An investigation of feasible descent algorithms for estimating the condition number of a matrix. TOP Vol.20, No.3, 2012.)\n\nArguments\n\nspline: the NormalSpline object returned by prepare, construct or interpolate function.\n\nReturn: an estimation of the Gram matrix condition number.\n\n\n\n\n\n","category":"function"},{"location":"Public-API/#NormalHermiteSplines.get_epsilon","page":"Public API","title":"NormalHermiteSplines.get_epsilon","text":"get_epsilon(spline::NormalSpline{T, RK}) where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nGet a ε - 'scaling parameter' of Bessel Potential space the normal spline was built in.\n\nArguments\n\nspline: the NormalSpline object returned by prepare, construct or interpolate function.\n\nReturn: ε.\n\n\n\n\n\n","category":"function"},{"location":"Public-API/#NormalHermiteSplines.estimate_epsilon","page":"Public API","title":"NormalHermiteSplines.estimate_epsilon","text":"estimate_epsilon(nodes::Matrix{T}) where T <: AbstractFloat\n\nGet an the estimation of the 'scaling parameter' of Bessel Potential space the normal spline was built in. This coinsides with result returned by get_epsilon function if all nodes are located in a unit hypercube, othewise the estimated value of ε can be significantly higher then necessary.\n\nArguments\n\nnodes: The function value nodes.          This should be an n×n_1 matrix, where n is dimension of the sampled space          and n_1 is the number of function value nodes.          It means that each column in the matrix defines one node.\n\nReturn: estimation of ε.\n\n\n\n\n\nestimate_epsilon(nodes::Matrix{T}, d_nodes::Matrix{T}) where T <: AbstractFloat\n\nGet an the estimation of the 'scaling parameter' of Bessel Potential space the normal spline was built in. This coinsides with result returned by get_epsilon function if all nodes and d_nodes are located in a unit hypercube, othewise the estimated value of ε can be significantly higher then necessary.\n\nArguments\n\nnodes: The function value nodes.          This should be an n×n_1 matrix, where n is dimension of the sampled space          and n_1 is the number of function value nodes.          It means that each column in the matrix defines one node.\nd_nodes: The function directional derivative nodes.          This should be an n×n_2 matrix, where n is dimension of the sampled space and          n_2 is the number of function directional derivative nodes.\n\nReturn: estimation of ε.\n\n\n\n\n\n","category":"function"},{"location":"Public-API/#Types","page":"Public API","title":"Types","text":"","category":"section"},{"location":"Public-API/#Bessel-Potential-space-Reproducing-Kernels","page":"Public API","title":"Bessel Potential space Reproducing Kernels","text":"","category":"section"},{"location":"Public-API/","page":"Public API","title":"Public API","text":"RK_H0\r\nRK_H1\r\nRK_H2","category":"page"},{"location":"Public-API/#NormalHermiteSplines.RK_H0","page":"Public API","title":"NormalHermiteSplines.RK_H0","text":"struct RK_H0{T <: AbstractFloat} <: ReproducingKernel_0\n\nDefine a type of reproducing kernel of Bessel Potential space H^n2 + 12_ε (R^n):\n\nV(eta  xi varepsilon) = exp (-varepsilon xi - eta)  \n\nFields\n\nε::T: 'scaling parameter' from the Bessel Potential space definition,          it may be omitted in the struct constructor otherwise it must be greater than zero\n\n\n\n\n\n","category":"type"},{"location":"Public-API/#NormalHermiteSplines.RK_H1","page":"Public API","title":"NormalHermiteSplines.RK_H1","text":"struct RK_H1{T <: AbstractFloat} <: ReproducingKernel_1\n\nDefine a type of reproducing kernel of Bessel Potential space H^n2 + 32_ε (R^n):\n\nV(eta  xi varepsilon) = exp (-varepsilon xi - eta)\n             (1 + varepsilon xi  - eta)  \n\nFields\n\nε::T: 'scaling parameter' from the Bessel Potential space definition,          it may be omitted in the struct constructor otherwise it must be greater than zero\n\n\n\n\n\n","category":"type"},{"location":"Public-API/#NormalHermiteSplines.RK_H2","page":"Public API","title":"NormalHermiteSplines.RK_H2","text":"struct RK_H2{T <: AbstractFloat} <: ReproducingKernel_2\n\nDefine a type of reproducing kernel of Bessel Potential space H^n2 + 52_ε (R^n):\n\nV(eta  xi varepsilon) = exp (-varepsilon xi - eta)\n             (3 + 3varepsilon xi  - eta + varepsilon ^2 xi - eta ^2 )  \n\nFields\n\nε::T: 'scaling parameter' from the Bessel Potential space definition,          it may be omitted in the struct constructor otherwise it must be greater than zero\n\n\n\n\n\n","category":"type"},{"location":"Public-API/#NormalSpline-structure","page":"Public API","title":"NormalSpline structure","text":"","category":"section"},{"location":"Public-API/","page":"Public API","title":"Public API","text":"NormalSpline","category":"page"},{"location":"Public-API/#NormalHermiteSplines.NormalSpline","page":"Public API","title":"NormalHermiteSplines.NormalSpline","text":"struct NormalSpline{T, RK} <: AbstractSpline where {T <: AbstractFloat, RK <: ReproducingKernel_0}\n\nDefine a structure containing full information of a normal spline\n\nFields\n\n_kernel: a reproducing kernel spline was built with.\n_compression: factor of transforming the original node locations into unit hypercube\n_nodes: transformed function value nodes\n_values: function values at interpolation nodes\n_d_nodes: transformed function derivative nodes\n_es: normalized derivative directions\n_d_values: function directional derivative values\n_min_bound: minimal bounds of the original node locations area\n_gram: Gram matrix of the problem\n_chol: Cholesky factorization of the Gram matrix\n_mu: spline coefficients\n_cond: estimation of the Gram matrix condition number\n\n\n\n\n\n","category":"type"},{"location":"Public-API/#Index","page":"Public API","title":"Index","text":"","category":"section"},{"location":"Public-API/","page":"Public API","title":"Public API","text":"Order = [:function, :type]","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"﻿","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/#Reproducing-Kernel-of-Bessel-Potential-space","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"","category":"section"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"The standard definition of Bessel potential space H^s can be found in ([1], [2], [6], [11], [12]). Here the normal splines will be constructed in the Bessel potential space H^s_varepsilon defined as:","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"   H^s_varepsilon (R^n) = left varphi  varphi in S \r\n  ( varepsilon ^2 +  xi ^2 )^s2mathcal F varphi  in L_2 (R^n) right  quad\r\n  varepsilon gt 0    s gt fracn2 ","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"where S  (R^n) is space of L. Schwartz tempered distributions, parameter s may be treated as a fractional differentiation order and mathcal F varphi  is a Fourier transform of the varphi. The parameter varepsilon introduced here may be considered as a \"scaling parameter\". It allows to control approximation properties of the normal spline which usually are getting better with smaller values of varepsilon, also it may be used to reduce the ill-conditioness of the related computational problem (in traditional theory varepsilon = 1).","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Theoretical properties of spaces H^s_varepsilon at varepsilon gt 0 are identical — they are Hilbert spaces with inner product","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"langle varphi  psi rangle _H^s_varepsilon =\r\nint ( varepsilon ^2  +  xi ^2 )^s\r\nmathcal F varphi  overlinemathcal F psi    d xi","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"and  norm","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":" varphi _ H^s_varepsilon = left( langle varphi  varphi rangle _H^s_varepsilon right)^12 =\r\n (  varepsilon ^2 +  xi ^2 )^s2 mathcal F varphi  _L_2  ","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"It is easy to see that all  varphi _H^s_varepsilon norms are equivalent. It means that space H^s_varepsilon (R^n) is equivalent to H^s (R^n) =  H^s_1 (R^n).","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Let's describe the Hölder spaces C_b^t(R^n) t gt 0 ([9], [2]).","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Definition 1. We denote the space","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"   S(R^n) = left f  f in C^infty (R^n)   sup_x in R^n  x^alpha D^beta f(x)   lt infty  forall alpha beta in mathbbN^n  right","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"as Schwartz space (or space of complex-valued rapidly decreasing infinitely differentiable functions defined on R^n) ([6], [7]).","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Below is a definition of Hölder space C^t_b(R^n) [9]:","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Definition 2. If 0 lt t = t + t t is non-negative integer, 0 lt t lt 1, then C^t_b(R^n) denotes the completion of S(R^n) in the norm","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"beginaligned\r\n   C^t_b (R^n) = left f  f in C^t_b (R^n)    f  _C^t_b  lt infty right  \r\n\r\n   f  _C^t_b =  f  _C_b^t  + \r\n\r\nsum _alpha  = t sup _x ne y frac  D^alpha  f(x)  - D^alpha  f(y)     x - y ^t   \r\n\r\n   f  _C_b^t = sup _x in R^n  D^alpha f(x)   forall alpha   alpha  le t\r\nendaligned","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Space C^t_b (R^n) consists of all functions having bounded continuous derivatives up to order t. It is easy to see that C_b^t(R^n) is Banach space [9].","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Connection of Bessel potential spaces H^s(R^n) with the spaces C_b^t(R^n) is expressed in Embedding theorem ([9], [2]).","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Embedding Theorem: If s = n2+t, where t non-integer, t gt 0, then space H^s(R^n) is continuously embedded in C_b^t(R^n).","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Particularly from this theorem follows that if f in H^n2 + 12_varepsilon (R^n), corrected if necessary on a set of Lebesgue measure zero, then it is uniformly continuous and bounded. Further if f in H^n2 + 12 + r_varepsilon (R^n), r — integer non-negative number, then it can be treated as f in C^r (R^n), where C^r (R^n) is a class of functions with r continuous derivatives.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"It can be shown ([3], [11], [8], [4], [5]) that function ","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"beginaligned\r\n  V_s ( eta  x varepsilon ) = c_V (nsvarepsilon) (varepsilon eta - x  )^s - fracn2\r\n\r\n          K_s - fracn2 (varepsilon eta - x  )      \r\n\r\n  c_V (nsvarepsilon) = fracvarepsilon ^n-2s  2^s-1 (2 pi )^n2 Gamma (s)   eta in R^n   x in R^n  varepsilon gt 0   s gt fracn2\r\nendaligned","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"is a reproducing kernel of H^s_varepsilon (R^n) space. Here K_gamma is modified Bessel function of the second kind [10]. The exact value of c_V (nsvarepsilon) is not important here and will be set to sqrtfrac2pi for ease of further calculations. This reproducing kernel sometimes is called as Matérn kernel [4].","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"The kernel K_gamma becomes especially simple when gamma  is half-integer. ","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"\r\n gamma =  r  + frac12   (r = 0 1 dots )","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"In this case it is expressed via elementary functions (see [10]):","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"beginaligned\r\nK_r+12(t) =\r\nsqrtfracpi 2t t^r+1 left (\r\n- frac1t fracddt right )^r+1 exp (-t)  \r\n\r\nK_r+12(t) =\r\nsqrtfracpi 2t exp (-t) sum_k=0^r\r\nfrac(r+k)k (r-k) (2t)^k  \r\n  (r = 0 1 dots )   \r\nendaligned","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"Let s_r =  r + fracn2 + frac12   r = 0 1 dots, then H^s_r_varepsilon(R^n) is continuously embedded in C_b^r(R^n) and its reproducing kernel with accuracy to constant multiplier can be presented as follows","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"beginaligned\r\nV_r + fracn2 + frac12(eta  x varepsilon) = exp (-varepsilon eta - x ) \r\nsum_k=0^r frac(r+k)2^k k (r-k) (varepsilon eta - x )^r-k  \r\n\r\n  (r = 0 1 dots )   \r\nendaligned","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"In particular we have:","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"beginaligned\r\n V_fracn2 + frac12(eta  x varepsilon) = exp (-varepsilon eta - x )  \r\n\r\n V_1 + fracn2 + frac12(eta  x varepsilon) = exp (-varepsilon eta - x )\r\n(1 + varepsilon eta - x )  \r\n\r\n V_2 + fracn2 + frac12(eta  x varepsilon) = exp (-varepsilon eta - x )\r\n(3 + 3varepsilon eta - x  + varepsilon ^2 eta - x  ^2 )  \r\nendaligned","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"References","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[1] D. Adams, L. Hedberg, Function spaces and potential theory. Berlin, Springer, 1996.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[2] M. Agranovich, Sobolev Spaces, Their Generalizations and Elliptic Problems in Smooth and Lipschitz Domains, Springer, Switzerland, 2015.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[3] N. Aronszajn, K. Smith, Theory of bessel potentials I, Ann.Inst.Fourier, 11, 1961.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[4] G. Fasshauer, Green’s Functions: Taking Another Look at Kernel Approximation, Radial Basis Functions, and Splines. In: Neamtu M., Schumaker L. (eds) Approximation Theory XIII: San Antonio 2010. Springer Proceedings in Mathematics, vol 13. Springer, New York, 2012.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[5] I. Kohanovsky, Multidimensional Normal Splines and Problem of Physical Field Approximation, International Conference on Fourier Analysis and its Applications, Kuwait, 1998.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[6] S. Nikol'skiĭ, Approximation of functions of several variables and imbedding theorems, Grundl. Math. Wissensch., 205, Springer-Verlag, New York, 1975.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[7] M. Reed, B. Simon, Methods of Modern Mathematical Physics, I: Functional Analysis, Academic Press, 1972.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[8] R. Schaback, Kernel-based Meshless Methods, Lecture Notes, Goettingen, 2011.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[9] H. Triebel, Interpolation. Function Spaces. Differential Operators, North-Holland, Amsterdam, 1978.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[10] G. Watson, A Treatise on the Theory of Bessel Functions ( 2nd.ed.), Cambridge University Press, 1966.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[11] H. Wendland, Scattered Data Approximation. Cambridge University Press, 2005.","category":"page"},{"location":"Reproducing-Kernel-of-Bessel-Potential-space/","page":"Reproducing Kernel of Bessel Potential space","title":"Reproducing Kernel of Bessel Potential space","text":"[12] J. Lions, E. Magenes, Problemes Aux Limites Non-Homogenes et Applications Vol. 1, Dunod, Paris, 1968.","category":"page"},{"location":"Relation-to-Polyharmonic-Splines/#Relation-to-Polyharmonic-Splines","page":"Relation to Polyharmonic Splines","title":"Relation to Polyharmonic Splines","text":"","category":"section"},{"location":"Usage/#Example-Usage","page":"Example Usage","title":"Example Usage","text":"","category":"section"},{"location":"Usage/#D","page":"Example Usage","title":"1D","text":"","category":"section"},{"location":"Usage/","page":"Example Usage","title":"Example Usage","text":"aa","category":"page"},{"location":"Usage/#D-2","page":"Example Usage","title":"2D","text":"","category":"section"},{"location":"Usage/","page":"Example Usage","title":"Example Usage","text":"cc","category":"page"},{"location":"Usage/#D-3","page":"Example Usage","title":"3D","text":"","category":"section"},{"location":"Usage/","page":"Example Usage","title":"Example Usage","text":"d","category":"page"},{"location":"","page":"Home","title":"Home","text":"Author = \"Igor Kohanovsky\"","category":"page"},{"location":"#NormalHermiteSplines.jl","page":"Home","title":"NormalHermiteSplines.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Multivariate Normal Hermite Splines in Julia","category":"page"},{"location":"","page":"Home","title":"Home","text":"NormalHermiteSplines.jl implements the normal splines method for solving following interpolation problem:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Problem:   Given points p_i p_i in R^n_i=1^n_1, s_j s_j in R^n_j=1^n_2 and a set of unit vectors e_j e_j in R^n_j=1^n_2 find a function f such that","category":"page"},{"location":"","page":"Home","title":"Home","text":"tag1\r\nbeginaligned\r\n f(p_i) =  u_i   quad  i = 1 2 dots n_1  \r\n  \r\n frac partialf  partiale_j (s_j) =  v_j   quad  j = 1 2 dots n_2  \r\n\r\n n_1 gt 0       n_2 ge 0  \r\nendaligned","category":"page"},{"location":"","page":"Home","title":"Home","text":"where frac partialf  partiale_j (s_j) = nabla f(s_j) cdot e_j = sum _k=1^n  frac partialf  partialx_k  (s_j) e_jk is a directional derivative of f at the point s_j in the direction of e_j.","category":"page"},{"location":"","page":"Home","title":"Home","text":"We assume that function f is an element of the Bessel potential space H^s_varepsilon (R^n) which is defined as:","category":"page"},{"location":"","page":"Home","title":"Home","text":"   H^s_varepsilon (R^n) = left varphi  varphi in S \r\n  ( varepsilon ^2 +  xi ^2 )^s2mathcal F varphi  in L_2 (R^n) right  quad\r\n  varepsilon gt 0   s gt fracn2 + r   quad r = 12dots  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"where  cdot  is the Euclidean norm, S  (R^n) is space of L. Schwartz tempered distributions, parameter s may be treated as a fractional differentiation order and mathcal F varphi  is a Fourier transform of the varphi. The parameter varepsilon can be considered as a \"scaling parameter\", it allows to control approximation properties of the normal spline which usually are getting better with smaller values of varepsilon, also it can be used to reduce the ill-conditioness of the related computational problem (in traditional theory varepsilon = 1).","category":"page"},{"location":"","page":"Home","title":"Home","text":"A function f from that Bessel potential space can be treated as a r-times continuously differentiable function, i.e. as an element of C^r (R^n).","category":"page"},{"location":"","page":"Home","title":"Home","text":"The normal splines method consists in finding a solution of system (1) having minimal norm in Hilbert space H^s_varepsilon (R^n)  thus the interpolation normal spline sigma is defined as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"tag2\r\n   sigma = rm argmin   f ^2  (1) forall f in H^s_varepsilon (R^n)   ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Normal splines method is based on the following functional analysis results:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Bessel potential space embedding theorem\nThe Riesz representation theorem for Hilbert spaces\nReproducing kernel properties","category":"page"},{"location":"","page":"Home","title":"Home","text":"Using these results it is possible to reduce the task (2) to solving a system of linear equations with symmetric positive definite Gram matrix.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Detailed explanation is given in Multivariate Normal Hermite Splines","category":"page"},{"location":"","page":"Home","title":"Home","text":"The normal splines method for one-dimensional function interpolation and linear ordinary differential and integral equations was proposed in [1]. Multivariate generalization of the normal splines method was developed for two-dimensional problem of low-range computerized tomography in [2] and applied for solving a mathematical economics problem in [3]. Further results were reported on seminars and conferences [4,5,6].","category":"page"},{"location":"#References:","page":"Home","title":"References:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"V. Gorbunov, The method of normal spline collocation. USSR Computational Mathematics and Mathematical Physics, Vol. 29, No. 1, 1989\nI. Kohanovsky, Normal Splines in Computing Tomography (in Russian). Avtometriya, No. 2, 1995\nV. Gorbunov, I. Kohanovsky, K. Makedonsky, Normal splines in reconstruction of multi-dimensional dependencies. Papers of WSEAS International Conference on Applied Mathematics, Numerical Analysis Symposium, Corfu, 2004\nI. Kohanovsky, Multidimensional Normal Splines and Problem of Physical Field Approximation, International Conference on Fourier Analysis and its Applications, Kuwait, 1998.\nI. Kohanovsky, Inequality-Constrained Multivariate Normal Splines with Some Applications in Finance. 27th GAMM-Seminar Leipzig on Approximation of Multiparametric functions, 2011\nV. Gorbunov, I. Kohanovsky, Heterogeneous Parallel Method for the Construction of Multi-dimensional Smoothing Splines. ESCO 2014 4th European Seminar on Computing, 2014","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\r\n      \"index.md\",\r\n      \"Usage.md\",\r\n      \"Numerical-Tests.md\",\r\n      \"Public-API.md\",\r\n      \"Interpolating-Normal-Hermite-Splines.md\",\r\n      \"Relation-to-Polyharmonic-Splines.md\",\r\n      \"Reproducing-Kernel-of-Bessel-Potential-space.md\"\r\n]\r\nDepth = 3","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/#Interpolating-Normal-Hermite-Splines","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"","category":"section"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Consider the following interpolation problem:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Problem: Given points p_i p_i in R^n_i=1^n_1, s_j s_j in R^n_j=1^n_2 and a set of unit vectors e_j e_j in R^n_j=1^n_2 find a function f such that","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag1\r\nbeginaligned\r\n f(p_i) =  u_i   quad  i = 1 2 dots n_1  \r\n  \r\n frac partialf  partiale_j (s_j) =  v_j   quad  j = 1 2 dots n_2  \r\n\r\n n_1 gt 0       n_2 ge 0  \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"where frac partialf  partiale_j (s_j) = nabla f(s_j) cdot e_j = sum _k=1^n  frac partialf  partialx_k  (s_j) e_jk is a directional derivative of f at the point s_j in the direction of e_j.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"We assume that function f is an element of the Bessel potential space H^s_varepsilon (R^n) which is defined as:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"   H^s_varepsilon (R^n) = left varphi  varphi in S \r\n  ( varepsilon ^2 +  xi ^2 )^s2mathcal F varphi  in L_2 (R^n) right  quad\r\n  varepsilon gt 0   s gt fracn2 + r   quad r = 12dots  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"where  cdot  is the Euclidean norm, S  (R^n) is space of L. Schwartz tempered distributions, parameter s may be treated as a fractional differentiation order and mathcal F varphi  is a Fourier transform of the varphi. The parameter varepsilon can be considered as a \"scaling parameter\", it allows to control approximation properties of the normal spline which usually are getting better with smaller values of varepsilon, also it can be used to reduce the ill-conditioness of the related computational problem (in traditional theory varepsilon = 1).","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Theoretical properties of spaces H^s_varepsilon at varepsilon gt 0 are identical — they are Hilbert spaces with inner product","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"langle varphi  psi rangle =\r\nint ( varepsilon ^2  +  xi ^2 )^s\r\nmathcal F varphi  overlinemathcal F psi    d xi","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"and  norm","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":" varphi  = left( langle varphi  varphi rangle right)^12 =\r\n (  varepsilon ^2 +  xi ^2 )^s2 mathcal F varphi  _L_2  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"It is easy to see that all these norms are equivalent. It means that space H^s_varepsilon (R^n) is equivalent to H^s (R^n) =  H^s_1 (R^n) ([3], [5]).","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Hilbert space H^s_varepsilon (R^n) (s = n2 + 12 + r  r ge 1) is continuously embedded in Hölder space C_b^r(R^n) ([3],[17],[20]) of functions continuous and bounded with their first r derivatives, it means function f can be treated as an element of function class C^r(R^n) of functions continuous with their first r derivatives. Therefore functionals F_i and F_j","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"beginaligned\r\n   F_i(varphi) = varphi (p_i)     F_j(varphi) = frac partialvarphi  partiale_j (s_j)     forall varphi in H^s_varepsilon (R^n)    s = n2 + 12 + r    r ge 1  \r\n   quad\r\n   p_i  s_j in R^n   \r\n   \r\n   i = 1 2 dots n_1       j = 1 2 dots n_2  \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"are linear continuous functionals in H^s_varepsilon.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"We also assume that all points p_i are different and in a case when among points s_j there are coincident ones, we stipulate that the corresponding unit vectors defining the directions of the directional derivatives at such points are linearly independent. Note that some points p_i may coincide with some s_j. Under these restrictions all functionals F_i  F_j are linearly independent.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"In accordance with Riesz representation theorem [1] these linear continuous functionals can be represented in the form of inner product of some elements h_i h_j in H^s_varepsilon and varphi in H^s_varepsilon, for any varphi in H^s_varepsilon:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":" F_i(varphi) = langle h_i  varphi rangle    quad  F_j(varphi) = langle h_j  varphi rangle    quad  forall varphi in H^s_varepsilon  \r\n  i = 1 2 dots n_1      j = 1 2 dots n_2  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Elements h_i and h_j are continuously differentiable functions. Thereby the original system of constraints (1) can be written in form:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag2\r\nbeginaligned\r\n f(p_i) = F_i(f) = langle h_i  f rangle  = u_i  \r\n\r\n frac partialf  partiale_j (s_j) = F_j(f) = langle h_j  f rangle = v_j    \r\n \r\n   h_i  h_j  f in H^s_varepsilon  \r\n quad\r\n  i = 1 2 dots n_1      j = 1 2 dots n_2  \r\n endaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"here all functions h_i and h_j are linear independent and system of constrains (2) defines a nonempty convex and closed set (as an intersection of hyper-planes in the Hilbert space H^s_varepsilon).","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Problem of reconstruction of function f satisfying system of constraints (2) is undetermined. We reformulate it as a problem of finding solution of this system of constraints that has minimal norm:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag3\r\n   sigma = rm argmin   f - z ^2  (2) z in H^s_varepsilon  forall f in H^s_varepsilon   ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"where z in H^s_varepsilon is a \"prototype\" function. Solution of this problem exists and it is unique ([6], [16]) as a projection of element z on the nonempty convex closed set in Hilbert space H^s_varepsilon. Element sigma is an interpolating normal spline.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"In accordance with generalized Lagrange method ([13], [16]) solution of the problem (3) can be presented as:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag4\r\nsigma =  z + sum _i=1^n_1 mu_i  h_i  + sum _j=1^n_2 mu_j  h_j   ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"where coefficients mu_i and mu_j are defined by system of linear equations","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag5\r\n    sum _l=1^n_1 g_il mu_l + sum _j=1^n_2 g_ij mu_j   =  u_i - langle h_i  z rangle   quad 1 le i le n_1         sum _i=1^n_1 g_ij mu_i + sum _m=1^n_2 g_jm mu_m =  v_j - langle h_j  z rangle    quad 1 le j le n_2  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Matrix of system (5) is the positive definite symmetric Gram matrix of the set of linearly independent elements  h_i h_j and coefficients g_il g_ij g_jm are defined as follows:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag6\r\n   g_il = langle h_i  h_l rangle     g_ij = langle h_i  h_j rangle      g_jm = langle h_j  h_m rangle  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Space H^s_varepsilon (R^n) is a reproducing kernel Hilbert space ([5],[18],[19],[20]). We denote its reproducing kernel as V(eta xi).","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Recall the definition of the reproducing kernel ([4], [7]). The reproducing kernel of space H^s_varepsilon is a such function V(eta xi) that","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"for every xi in R^n,  V(eta xi) as function of eta belongs to H^s_varepsilon\nfor every xi in R^n and every function varphi in H^s_varepsilon","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag7\r\nvarphi(xi) = langle V(eta xi)  varphi(eta) rangle","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Reproducing kernel is a symmetric function:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"V(eta xi) = V(xi eta)  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"also in the considered case (s = n2 + 12 + r  r ge 1) it is a continuously differentiable function. Differentiating the identity (7) allows to get the identities for derivatives:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag8\r\nfrac partial varphi(xi)partial xi_k = left langle fracpartial V(cdot xi) partial xi_k varphi right rangle","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"which holds for any varphi in H^s_varepsilon and xi in R^n, it means that function fracpartial V(cdot  xi) partialxi_k represents a point-wise functional defined as value of function frac partial varphi (cdot) partialxi_k at a point xi.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Now it is possible to express functions h_i and h_j via the reproducing kernel V. Comparing (2) with (7) and (8) we receive:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag9\r\nbeginaligned\r\n  h_i (eta) =  V(eta p_i)    qquad qquad qquad qquad qquad   i = 1 2 dots n_1    \r\n  h_j (eta) =  fracpartial V(eta s_j)partial e_j =  sum_k=1^n  frac partial V(eta s_j) partialxi_k e_jk    quad  j = 1 2 dots n_2    \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"The coefficients (6) of the Gram matrix can be presented as ([7], [8], [10]):","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag10\r\nbeginaligned\r\n    g_il = langle h_i  h_l rangle = langle V(cdot p_i)  V(cdot p_l) rangle = V(p_i p_l)  \r\n   \r\n     g_ij = langle h_i  h_j rangle = left langle V(cdot p_i) fracpartial V(cdot s_j)partial e_j right rangle =  fracpartial V(p_i s_j)partial e_j =\r\n    \r\n     qquad qquad qquad =  sum_k=1^n  frac partial V(p_i s_j) partialxi_k e_jk   \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"With the help of (7) and (10), we can also calculate g_jm ([8], [10]):","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag11\r\nbeginaligned\r\n g_jm = langle h_j  h_m rangle   =  left langle fracpartial V(cdot s_j)partial e_j fracpartial V(cdot s_m)partial e_m right rangle   =  frac partial^2 V(s_j s_m) partial e_j partial e_m =\r\n \r\n   =  sum_r=1^n sum_k=1^n  frac partial^2 V(s_j s_m) partialeta_r partialxi_k e_jk e_mr  \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Further","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag12\r\nbeginaligned\r\n   langle h_i  z rangle  =  langle V(cdot p_i)  z rangle = z(p_i)   \r\n  \r\n   langle h_j  z rangle  = fracpartial z(s_j)partial e_j = sum_k=1^n  frac partial z(s_j) partialx_k e_jk  \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Normal hermite splines will be constructed in Bessel potential spaces H^s_1_varepsilon (R^n)   s_1 = n2 + 32 and H^s_2_varepsilon (R^n)   s_2 = n2 + 52. Elements of space H^s_1 can be treated as  continuously differentiable functions and elements of space H^s_2 can be treated as twice continuously differentiable functions. Note, the spline is infinitely differentiable everywhere in R^n exepting the knots p_i and s_j.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Reproducing kernel of Bessel potential space was presented in [5] and its simplified form was given in [14], [18], [19], [20]. For space H^s_varepsilon (R^n)  s = n2 + 12 + r  r ge 0 it can be written as:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":" V(eta  xi) = exp (-varepsilon eta - xi) \r\n     sum_k=0^r frac(r+k)2^k k (r-k) (varepsilon eta - xi)^r-k  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"(a constant multiplier is omitted here.)","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Therefore for space H^s_1_varepsilon (R^n) with accuracy to constant multiplier we get:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag13\r\nV(eta xi) =  exp (-varepsilon eta - xi)\r\n             (1 + varepsilon eta - xi)  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"and for space H^s_2_varepsilon (R^n):","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag14\r\nV(eta xi) =  exp (-varepsilon eta - xi)\r\n             (3 + 3varepsilon eta - xi + varepsilon ^2 eta - xi ^2 )  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Let's write down expressions of h_i h_j g_il g_ij g_jm for space H^s_1_varepsilon (R^n):","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag15\r\nbeginaligned\r\n h_i (eta) =  exp (-varepsilon eta - p_i ) (1 + varepsilon eta - p_i)   qquad  quad   i = 1 2 dots n_1   \r\n h_j (eta) = varepsilon^2 exp (-varepsilon  eta - s_j  ) sum _k=1^n (eta_k - s_jk) e_jk   quad  j = 1 2 dots n_2   \r\n g_il= exp (-varepsilon  p_i - p_l  )(1 + varepsilon  p_i - p_l  )      quad     i = 1 2 dots n_1     l = 1 2 dots n_1   \r\n g_ij = varepsilon^2 exp (-varepsilon p_i - s_j  ) sum _k=1^n (p_ik - s_jk) e_jk      i = 1 2 dots n_1     j = 1 2 dots n_2  \r\n\r\n g_jm =  sum_r=1^n sum_k=1^n  frac partial^2 V(s_j s_m) partialeta_r partialxi_k e_jk e_mr\r\n\r\n quad qquad j ne m   quad j = 1 2 dots n_2     m = 1 2 dots n_2   \r\n\r\n textwhere\r\n\r\n  frac partial^2 V(s_j s_m) partialeta_r partialxi_r = varepsilon^2 exp (-varepsilon  s_j - s_m ) left (1 - varepsilon frac (s_jr - s_mr)^2 s_j - s_m  right)  \r\n\r\n  frac partial^2 V(s_j s_m) partialeta_r partialxi_k = -varepsilon^3 exp (-varepsilon  s_j - s_m ) frac (s_jr - s_mr)(s_jk - s_mk) s_j - s_m     quad r ne k  \r\n\r\n g_jj = varepsilon^2 sum _r=1^n  (e_jr)^2  = varepsilon^2    quad j = 1 2 dots n_2  \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"and for space H^s_2_varepsilon (R^n):","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag16\r\nbeginaligned\r\n h_i (eta) =  exp (-varepsilon eta - p_i ) (3 + 3 varepsilon eta - p_i  +  varepsilon^2  eta - p_i ^2) )\r\n   qquad quad i = 1 2 dots n_1   \r\n h_j (eta) =varepsilon^2 exp (-varepsilon eta - s_j  ) (1 + varepsilon eta - s_j ) sum _k=1^n (eta_k - s_jk) e_jk   quad  j = 1 2 dots n_2   \r\n g_il= exp (-varepsilon p_i - p_l ) (3 + 3 varepsilon p_i - p_l  +  varepsilon^2  p_i - p_l ^2) )   \r\n\r\n qquad qquad qquad qquad qquad qquad qquad i = 1 2 dots n_1     l = 1 2 dots n_1   \r\n g_ij = varepsilon^2 exp (-varepsilon p_i - s_j  ) (1 + varepsilon p_i - s_j ) sum _k=1^n (p_ik - s_jk) e_jk   \r\n\r\n qquad qquad qquad qquad qquad qquad qquad  i = 1 2 dots n_1     j = 1 2 dots n_2  \r\n\r\n g_jm =  sum_r=1^n sum_k=1^n  frac partial^2 V(s_j s_m) partialeta_r partialxi_k e_jk e_mr\r\n\r\n quad qquad j ne m   quad j = 1 2 dots n_2     m = 1 2 dots n_2  \r\n\r\n textwhere\r\n\r\n  frac partial^2 V(s_j s_m) partialeta_r partialxi_r = varepsilon^2 exp (-varepsilon  s_j - s_m ) (1 + varepsilon  s_j - s_m  - varepsilon^2 (s_jr - s_mr)^2)  \r\n\r\n  frac partial^2 V(s_j s_m) partialeta_r partialxi_k = -varepsilon^4 exp (-varepsilon  s_j - s_m ) (s_jr - s_mr)(s_jk - s_mk)    quad r ne k  \r\n \r\n g_jj = varepsilon^2 sum _r=1^n  (e_jr)^2  = varepsilon^2    quad j = 1 2 dots n_2  \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"In a case when there is no information of function f derivatives the Problem (1) is reducing to the simplest interpolation problem:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Problem: Given points p_i p_i in R^n_i=1^n_1 find a function f such that","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag17\r\nbeginaligned\r\n f(p_i) =  u_i   quad  i = 1 2 dots n_1  \r\n\r\n n_1 gt 0  \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"We assume that f is a continuous function. It can be treated as an element of Bessel potential space H_varepsilon^s_0 (R^n)   s_0 =  n2 + 12, this space is continuously embedded in Hölder space C_b(R^n) of continuous and bounded functions.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"Reproducing kernel of Bessel potential space H_varepsilon^s_0(R^n) can be written as:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"V(eta  xi) = exp (-varepsilon eta - xi)  ","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"(with accuracy to a constant multipliler), and expressions for h_i g_il are defined by:","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"tag18\r\nbeginaligned\r\n h_i (eta) = exp (-varepsilon eta - p_i )   quad  i = 1 2 dots n_1  \r\n \r\n g_il = exp (-varepsilon  p_i - p_l  ))  \r\n  quad\r\ni = 1 2 dots n_1     l = 1 2 dots n_1  \r\nendaligned","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"When value of the parameter varepsilon is small this normal spline is similar to multivariate generalization of the one dimensional linear spline.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"We now consider the choice of value for parameterd varepsilon. In a case when value of this parameter is small the normal spline is similar to Duchon's D^m -spline [12]. Approximating properties of the normal spline are getting better with smaller values of varepsilon, however with decreasing value of varepsilon the condition number of the corresponding Gram matrix is increasing. Therefore, when choosing the value of parameter varepsilon, a compromise is needed. In practice, it is necessary to choose such value of the varepsilon that condition number of Gram matrix is small enough. Numerical procedures of the matrix condition number estimation are well known.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"As well, it is useful to preprocess the source data of the problem by transforming the domain where interpolation knots are located into the unit hypercube.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"The normal splines method for one-dimensional function interpolation and linear ordinary differential and integral equations was proposed in [8] and [9] and developed in [10]. Multivariate generalization of the normal splines method was developed for two-dimensional problem of low-range computerized tomography in [15] and applied for solving a mathematical economics problem in [11]. Further results were reported on seminars and conferences [14,21,22].","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"References","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[1]  R. Adams, J. Fournier, Sobolev Spaces. Pure and Applied Mathematics. (2nd ed.). Boston, MA: Academic Press, 2003.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[2] D. Adams, L. Hedberg, Function spaces and potential theory. Berlin, Springer, 1996.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[3] M. Agranovich, Sobolev Spaces, Their Generalizations and Elliptic Problems in Smooth and Lipschitz Domains, Springer, Switzerland, 2015.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[4] N. Aronszajn, Theory of reproducing kernels, Tranzactions of the AMS, Vol. 68, No. 3, 1950.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[5] N. Aronszajn, K.T. Smith, Theory of bessel potentials I, Ann.Inst.Fourier, Vol. 11, 1961.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[6] A. Balakrishnan, Applied Functional Analysis, New York, Springer-Verlag, 1976.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[7] A. Bezhaev, V. Vasilenko, Variational Theory of Splines, Springer US, 2001.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[8] V. Gorbunov, The method of normal spline collocation, USSR Computational Mathematics and Mathematical Physics, Vol. 29, No. 1, 1989.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[9] V. Gorbunov, Extremum Problems of Measurements Data Processing, Ilim, 1990 (in Russian).","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[10] V. Gorbunov, V. Petrishchev, Improvement of the normal spline collocation method for linear differential equations, Comput. Math. Math. Phys., Vol. 43, No. 8, 2003.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[11] V. Gorbunov, I. Kohanovsky, K. Makedonsky, Normal splines in reconstruction of multi-dimensional dependencies. Papers of WSEAS International Conference on Applied Mathematics, Numerical Analysis Symposium, Corfu, 2004.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[12] J. Duchon, Splines minimizing rotation-invariant semi-norms in Sobolev spaces, Lect. Notes in Math., Vol. 571, Springer, Berlin, 1977","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[13] A. Ioffe, V. Tikhomirov, Theory of extremal problems, North-Holland, Amsterdam, 1979.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[14] I. Kohanovsky, Multidimensional Normal Splines and Problem of Physical Field Approximation, International Conference on Fourier Analysis and its Applications, Kuwait, 1998.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[15] I. Kohanovsky, Normal Splines in Computing Tomography, Avtometriya, 1995, N 2.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[16] P.-J. Laurent, Approximation et optimization, Paris, 1972.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[17] H. Triebel, Interpolation. Function Spaces. Differential Operators. North-Holland, Amsterdam, 1978.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[18] R. Schaback, Kernel-based Meshless Methods, Lecture Notes, Goettingen, 2011.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[19] H. Wendland, Scattered Data Approximation. Cambridge University Press, 2005.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[20] Reproducing Kernel of Bessel Potential space.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[21] V. Gorbunov, I. Kohanovsky, Heterogeneous Parallel Method for the Construction of Multi-dimensional Smoothing Splines. ESCO 2014 4th European Seminar on Computing, 2014.","category":"page"},{"location":"Interpolating-Normal-Hermite-Splines/","page":"Interpolating Normal Hermite Splines","title":"Interpolating Normal Hermite Splines","text":"[22] I. Kohanovsky, Inequality-Constrained Multivariate Normal Splines with Some Applications in Finance. 27th GAMM-Seminar Leipzig on Approximation of Multiparametric functions, 2011","category":"page"},{"location":"Numerical-Tests/#Numerical-Tests","page":"Numerical Tests","title":"Numerical Tests","text":"","category":"section"},{"location":"Numerical-Tests/#D","page":"Numerical Tests","title":"1D","text":"","category":"section"},{"location":"Numerical-Tests/#Models","page":"Numerical Tests","title":"Models","text":"","category":"section"},{"location":"Numerical-Tests/","page":"Numerical Tests","title":"Numerical Tests","text":"bb","category":"page"},{"location":"Numerical-Tests/#Tests","page":"Numerical Tests","title":"Tests","text":"","category":"section"},{"location":"Numerical-Tests/","page":"Numerical Tests","title":"Numerical Tests","text":"c","category":"page"},{"location":"Numerical-Tests/#D-2","page":"Numerical Tests","title":"2D","text":"","category":"section"},{"location":"Numerical-Tests/#Models-2","page":"Numerical Tests","title":"Models","text":"","category":"section"},{"location":"Numerical-Tests/","page":"Numerical Tests","title":"Numerical Tests","text":"b","category":"page"},{"location":"Numerical-Tests/#Tests-2","page":"Numerical Tests","title":"Tests","text":"","category":"section"},{"location":"Numerical-Tests/","page":"Numerical Tests","title":"Numerical Tests","text":"c","category":"page"},{"location":"Numerical-Tests/#D-3","page":"Numerical Tests","title":"3D","text":"","category":"section"},{"location":"Numerical-Tests/#Models-3","page":"Numerical Tests","title":"Models","text":"","category":"section"},{"location":"Numerical-Tests/","page":"Numerical Tests","title":"Numerical Tests","text":"h","category":"page"},{"location":"Numerical-Tests/#Tests-3","page":"Numerical Tests","title":"Tests","text":"","category":"section"},{"location":"Numerical-Tests/","page":"Numerical Tests","title":"Numerical Tests","text":"j","category":"page"}]
}
